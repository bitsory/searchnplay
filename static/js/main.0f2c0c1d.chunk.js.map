{"version":3,"sources":["components/navbar.jsx","components/showbox.jsx","components/play.jsx","app.jsx","index.js","service/youtube.js"],"names":["Navbar","inputRef","React","createRef","onSubmit","event","preventDefault","name","current","value","props","OnSearch","className","this","type","ref","placeholder","PureComponent","Showbox","play","OnPlay","boxProp","videoTitle","title","channelTitle","thumbNail","thumbnails","medium","url","onClick","src","alt","Component","Play","selectedVideo","playProp","width","height","id","frameBorder","allowFullScreen","publishedAt","description","App","state","videos","handleSearch","a","youtubeProp","search","setState","handlePlay","item","playItem","mostPopular","map","video","key","youtube","requestOptions","method","redirect","fetch","response","json","result","items","snippet","videoId","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f2c0c1d.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Navbar extends PureComponent {\r\n      \r\n    inputRef = React.createRef();\r\n\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const name = this.inputRef.current.value;\r\n        \r\n        name && this.props.OnSearch(name);\r\n        this.inputRef.current.value = '';\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <div className='navbar'>\r\n                    <span className=\"navbar_logo\">    \r\n                        <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        <h1 className=\"navbar_title\">YouTube</h1>\r\n                    </span>\r\n                    <form className='search-form' onSubmit={this.onSubmit}>\r\n                    <input \r\n                        type='search'\r\n                        ref={this.inputRef}\r\n                        className='search-input'\r\n                        placeholder='search...' \r\n                    ></input>\r\n                    <button className='search-btn'><i className=\"fas fa-search fa-2x\"></i></button>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass Showbox extends Component {\r\n    \r\n    \r\n    play = () =>{\r\n        \r\n        this.props.OnPlay(this.props.boxProp);\r\n        \r\n    }\r\n    \r\n    \r\n\r\n    render() {\r\n        \r\n        const videoTitle = this.props.boxProp.name.title;\r\n        const channelTitle = this.props.boxProp.name.channelTitle;\r\n        const thumbNail = this.props.boxProp.name.thumbnails.medium.url;\r\n        \r\n        return (\r\n            <>\r\n                <li className=\"showbox\">\r\n                        <div className='video' onClick={this.play}>\r\n                            <embed className='thumbNail' type=\"image/jpg\" src={thumbNail} alt='thumbnail'></embed>\r\n                            <div className='description'>\r\n                            <div className='videoTitle'>{videoTitle}</div>\r\n                            <div className='channelTitle'>{channelTitle}</div>\r\n                            </div>\r\n                        </div>\r\n                \r\n                    \r\n                </li>  \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Showbox;","import React, { Component } from 'react';\r\n\r\nclass Play extends Component {\r\n    \r\n\r\n    render() {\r\n\r\n        const selectedVideo = this.props.playProp;\r\n        \r\n        \r\n\r\n        return (\r\n            <> \r\n             <iframe className=\"player\" title=\"youtube video player\" type=\"text/html\" width=\"100%\" height=\"500\" \r\n                src={`https://www.youtube.com/embed/${selectedVideo.id}?autoplay=1`}\r\n                frameBorder=\"0\" allowFullScreen={true}></iframe>\r\n            <div className='selectedDescription'><br></br>\r\n                <span className='selectedTitle'>Title : {selectedVideo.name.title}</span><br></br>\r\n                <span className='selectedPublishedAt'>Published : {selectedVideo.name.publishedAt}</span><br></br>\r\n                <span className='selectedDes'>description : {selectedVideo.name.description}</span>\r\n            </div>\r\n  \r\n    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Play;            ","import React, { Component } from 'react';\n\nimport './app.css';\n\nimport Navbar from './components/navbar.jsx';\nimport Showbox from './components/showbox.jsx';\nimport Play from './components/play.jsx';\n\n\n\nclass App extends Component {\n  state = {\n\n    videos: [],\n    selectedVideo : null\n\n  };\n\n  async componentDidMount() {\n    //call component right after it is mounted\n    const videos = await this.props.youtubeProp.mostPopular();\n    this.setState({videos : videos});    \n  }\n\n\n\n  handleSearch = async (name) => {\n    const videos = await this.props.youtubeProp.search(name);\n    this.setState({videos : videos});\n    this.setState({selectedVideo : null});  \n  }\n\n  handlePlay = (item) => {\n    const playItem = item;  \n    this.setState({selectedVideo : playItem});\n  } \n\n  render () {\n    \n    return (\n      \n      <>\n        {<Navbar\n          OnSearch={this.handleSearch}\n        ></Navbar>}\n        \n        <section className=\"mainPage\">\n        { \n        !this.state.selectedVideo &&\n        this.state.videos.map( (video) =>\n          <Showbox\n            key={video.id}            \n            boxProp = {video}\n            OnPlay={this.handlePlay}>          \n          </Showbox>\n        )}\n        </section> \n\n        <section className='playPage'>\n          <section className='playingVideo'>\n            {this.state.selectedVideo && \n              <Play\n              playProp = {this.state.selectedVideo}>\n              </Play>\n            }    \n          </section> \n\n          <section className='playPageList'>\n            {this.state.selectedVideo &&\n            this.state.videos.map( (video) =>\n            <Showbox\n              key={video.id}              \n              boxProp = {video}\n              OnPlay={this.handlePlay}>          \n            </Showbox>\n            )}\n          </section>  \n        </section>\n        \n      </>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport Youtube from './service/youtube';\n\n\n\nconst youtube = new Youtube(process.env.REACT_APP_YOUTUBE_API_KEY);\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App \n      youtubeProp={youtube}\n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","class Youtube {\r\n    \r\n    constructor(key) {\r\n        this.key = key;\r\n\r\n        this.requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow',\r\n        };\r\n    }\r\n\r\n\r\n    async mostPopular() {\r\n\r\n        \r\n        const response = await fetch(\r\n            `https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=10&key=${this.key}`,\r\n            this.requestOptions);\r\n        const result = await response.json();\r\n        \r\n        const videos = result.items.map (item => {\r\n            return {id : item.id, name : item.snippet};\r\n            });\r\n        return videos;\r\n        \r\n    }\r\n\r\n    async search(name) {\r\n        const response = await fetch(\r\n            `https://youtube.googleapis.com/youtube/v3/search?q=${name}&part=snippet&type=video&maxResults=10&key=AIzaSyCCc_I30kyjugwIB-BnghJJqi8hagtgCT8`,\r\n            this.requestOptions);\r\n        const result = await response.json();\r\n\r\n        const videos = result.items.map (item => {\r\n            return {id : item.id.videoId, name : item.snippet};\r\n        });\r\n        \r\n        return videos;\r\n        \r\n    }\r\n}\r\n\r\nexport default Youtube;"],"sourceRoot":""}